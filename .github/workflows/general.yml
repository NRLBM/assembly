name: general

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/checkout@v2
      with:
        repository: NRLBM/assembly
        path: assembly
    - name: install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas flake8
    - name: lint bexsero_coverage.py
      run: |
        cd $GITHUB_WORKSPACE/assembly
        flake8 --ignore E111 --max-line-length 130 workflow/scripts/bexsero_coverage.py
    - name: test bexsero_coverage.py
      run: |
        cd $GITHUB_WORKSPACE/assembly
        python workflow/scripts/bexsero_coverage.py --input test/bexsero_coverage/covered.json --output test/bexsero_coverage/covered_output.tsv
        cat test/bexsero_coverage/covered_output.tsv
        cmp test/bexsero_coverage/covered_output.tsv test/bexsero_coverage/correct/covered.tsv

        python workflow/scripts/bexsero_coverage.py --input test/bexsero_coverage/uncovered.json --output test/bexsero_coverage/uncovered_output.tsv
        cmp test/bexsero_coverage/uncovered_output.tsv test/bexsero_coverage/correct/uncovered.tsv

        python workflow/scripts/bexsero_coverage.py --input test/bexsero_coverage/unpredictable.json --output test/bexsero_coverage/unpredictable_output.tsv
        cmp test/bexsero_coverage/unpredictable_output.tsv test/bexsero_coverage/correct/unpredictable.tsv
    - name: test move_to_scratch.py
      run: |
        cd $GITHUB_WORKSPACE/assembly
        mkdir -p test/test_out

        echo "Error code 0 if this works normally" | tee > logfile.txt
        python workflow/scripts/move_to_scratch.py --input test/move_to_scratch --pattern microbesng --output test/test_out/correct_1.fastq.gz test/test_out/correct_2.fastq.gz
        echo "Error code: $?" | tee >> logfile.txt

        echo "Error code 0 if this fails with only one input file" | tee >> logfile.txt
        ! python workflow/scripts/move_to_scratch.py --input test/move_to_scratch --pattern microbesng --output test/test_out/correct_1.fastq.gz
        echo "Error code: $?" | tee >> logfile.txt

        echo "Error code 0 if this fails when two rv output files are provided" | tee >> logfile.txt
        ! python workflow/scripts/move_to_scratch.py --input test/move_to_scratch --pattern microbesng --output test/test_out/correct_2.fastq.gz test/test_out/correct_2.fastq.gz
        echo "Error code: $?" | tee >> logfile.txt

        echo "Error code 0 if this fails when output files do not match each other" | tee >> logfile.txt
        ! python workflow/scripts/move_to_scratch.py --input test/move_to_scratch --pattern microbesng --output test/test_out/correct_1.fastq.gz test/test_out/unpaired_2.fastq.gz
        echo "Error code: $?" | tee >> logfile.txt

        echo "Error code 0 if this fails with a missing rv file" | tee >> logfile.txt
        ! python workflow/scripts/move_to_scratch.py --input test/move_to_scratch --pattern microbesng --output test/test_out/unpaired_1.fastq.gz test/test_out/unpaired_2.fastq.gz
        echo "Error code: $?" | tee >> logfile.txt

        echo "Error code 0 if this fails with empty input files (<= 100 bytes)" | tee >> logfile.txt
        ! python workflow/scripts/move_to_scratch.py --input test/move_to_scratch --pattern microbesng --output test/test_out/empty_1.fastq.gz test/test_out/empty_2.fastq.gz
        echo "Error code: $?" | tee >> logfile.txt

        echo "Error code 0 if this fails when multiple files are found to match output files" | tee >> logfile.txt
        ! python workflow/scripts/move_to_scratch.py --input test/move_to_scratch --pattern microbesng --output test/test_out/double_1.fastq.gz test/test_out/double_2.fastq.gz
        echo "Error code: $?" | tee >> logfile.txt

        echo "Contents logfile:"
        cat logfile.txt
